"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};console.log("angular loaded");var app=angular.module("myApp",["ui.router","ui.bootstrap","ngAnimate","xeditable","angular-typed"]);app.run(["editableOptions",function(t){t.theme="bs3"}]),app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,o){o.html5Mode({}),e.otherwise("/")}]),app.run(["$rootScope","$state","authFactory",function(t,e,o){t.admin=null,t.$on("$stateChangeStart",function(t,o,r,n,s,i){o.authenticate&&!i.isAdmin()&&(e.transitionTo("home"),t.preventDefault())})}]),app.config(["$stateProvider",function(t){t.state("about",{url:"/about",templateUrl:"/js/about/about.html",authenticate:!1})}]),app.controller("adminController",["$scope","$state","adminFactory","allProjects","authFactory",function(t,e,o,r,n){t.submitProject=function(e){o.postProject(e),t.project=null},t.allProjects=r||[{id:0,name:"empty",deploy:"empty",gitHub:"empty"}],t.data={availableProjects:t.allProjects,selectedProject:{id:0,name:"empty",deploy:"empty",gitHub:"empty",description:"empty"}},t.selectedprojectChanged=function(){t.currentProject=t.selectedItem},t.logOut=function(){n.logOut(),e.go("home")}}]),app.directive("projectEdit",["projectFactory",function(t){return{restrict:"E",scope:{project:"=project"},templateUrl:"adminEdit.html"}}]),app.factory("adminFactory",["$http",function(t){return{postProject:function(e){return t.post("/api/project",e).then(function(t){return t.data}).catch()},getAllProjects:function(){return t.get("/api/project").then(function(t){return t.data}).catch()}}}]),app.config(["$stateProvider",function(t){t.state("admin",{url:"/admin",templateUrl:"/js/admin/admin.html",controller:"adminController",authenticate:!0,resolve:{allProjects:["adminFactory",function(t){return t.getAllProjects()}]}})}]),app.controller("authController",["$scope","authFactory",function(t,e){t.isAdmin=e.isAdmin()}]),app.factory("authFactory",["$http","$state","$rootScope",function(t,e,o){return{isAdmin:function(){return!!o.admin},login:function(e){return t.get("/api/authentication/"+e.name+"/"+e.password).then(function(t){return t.data?o.admin=!0:o.admin=!1,t}).catch()},logOut:function(){o.admin=null}}}]),app.controller("contactController",["$scope","posts","feedBackFactory",function(t,e,o){t.posts=e,t.getReplies=o.getReplies,t.postReply=function(t,e){var r={postId:t,content:e};o.postReplY(r)},t.submitForm=function(e){o.postComment(e).then(function(e){t.posts[t.posts.length]=e}).catch(),t.user=null,t.userForm.$setPristine(!0)},t.clear=function(){t.user=null,t.userForm.$setPristine(!0)},t.submit=function(){t.message&&t.email&&t.name&&controllerFactory.sendMessage(t.name,t.email,t.message)}}]),app.directive("replies",function(){return console.log("post directive"),{restrict:"E",scope:{post:"="},templateUrl:"js/contact/template/replyView.html",link:function(t,e,o){t.replies=[{label:"Home",state:"home"},{label:"Projects",state:"projects"},{label:"About Me",state:"about"},{label:"Contact Me",state:"contact"}]}}}),app.factory("feedBackFactory",["$http",function(t){console.log("In the feeback factory");var e={};return e.getPosts=function(){return t.get("/api/comment").then(function(t){return console.log("getting comments"),t.data}).catch()},e.postComment=function(e){return console.log("Posting comment"),t.post("/api/comment",e).then(function(t){return console.log(t),t.data}).catch()},e.getReplies=function(e){return t.get("/api/reply/"+e).then(function(t){return console.log("got comments"),t.data}).catch()},e.postReplY=function(e){return console.log("running post reply",e),t.post("/api/reply/",{post_id:parseInt(e.postId.postId),content:e.content.content}).then(function(t){return t.data})},e}]),app.config(["$stateProvider",function(t){t.state("contact",{url:"/contact",templateUrl:"/js/contact/contact.html",controller:"contactController",authenticate:!1,resolve:{posts:["feedBackFactory",function(t){return console.log("invoking feedBackFactory"),t.getPosts()}]}})}]),console.log("bar ctrl loaded"),app.controller("BarCtrl",["$scope","$timeout",function(t,e){t.timeInMs=0;var o=function o(){t.timeInMs+=500,e(o,500)};e(o,500)}]),app.config(["$stateProvider",function(t){t.state("home",{url:"/",templateUrl:"/js/home/home.html",controller:"BarCtrl",authenticate:!1})}]),app.controller("loginController",["$scope","$state","authFactory","$location",function(t,e,o,r){t.login=function(){var n={name:t.username,password:t.password};o.login(n).then(function(t){console.log(t),e.go("home",{},{reload:!0}),r.path("/")}).catch()}}]),app.config(["$stateProvider",function(t){t.state("login",{url:"/login",templateUrl:"/js/login/login.html",controller:"loginController",authenticate:!1})}]),app.directive("navbar",["$rootScope","$state","authFactory",function(t,e,o){return{restrict:"E",scope:{},templateUrl:"js/navBar/navbar.html",link:function(t){t.showLink=function(t){return!t.isAdmin&&("admin"===t.state||"login"===t.state)},t.isLoggedIn=function(){return o.isAdmin()},t.links=[{label:"Home",state:"home"},{label:"Projects",state:"projects"},{label:"About Me",state:"about"}]}}}]),app.controller("projectController",["$scope","allProjects",function(t,e){t.projects=e}]),app.controller("singleProjectController",["$scope","projectFactory","currentProject","$sce",function(t,e,o,r){t.currentProject=o,t.trustSrc=function(t){return r.trustAsResourceUrl(t)},t.movie={src:t.currentProject.videoLink},t.hasVideoLink=function(){return!!o.videoLink}}]),app.directive("projectTile",function(){return{restrict:"E",scope:{project:"="},templateUrl:"js/projects/singleProject/singleProjectTile.html"}}),app.factory("projectFactory",["$http",function(t){return{getAllProjects:function(){return t.get("/api/project").then(function(t){return t.data}).catch()},getSingleProject:function(e){return t.get("/api/project/"+e).then(function(t){return t.data}).catch()},postProject:function(e){return t.post("/api/project",e).then(function(t){return t.data}).catch()},updateProject:function(e){return t.put("api/project",e).then(function(t){return t.data}).catch()}}}]),app.config(["$stateProvider",function(t){t.state("projects",{url:"/projects",templateUrl:"/js/projects/projects.html",controller:"projectController",authenticate:!1,resolve:{allProjects:["projectFactory",function(t){return t.getAllProjects()}]}}),t.state("singleProject",{url:"/projects/:id",templateUrl:"/js/projects/singleProject/singleProject.html",controller:"singleProjectController",authenticate:!1,resolve:{currentProject:["projectFactory","$stateParams",function(t,e){return t.getSingleProject(e.id)}]}})}])(function(){console.log("ab.Typeit about to"),angular.module("ab.Typeit",[]).directive("abTypeit",function(){return coneole.log("running the wrapper"),{restrict:"A",scope:{typeitStrings:"=abTypeit",typeitLoop:"=",typeitLoopDelay:"=",typeitBreakLines:"=",typeitSpeed:"=",typeitLifeLike:"=",typeitCursor:"=",typeitCursorSpeed:"=",typeitStartDelay:"=",typeitBreakDelay:"="},controller:["$scope","$element","$attrs",function(t,e,o){var r=$(e);try{r.typeIt({strings:t.typeitStrings,loop:t.typeitLoop,loopDelay:t.typeitLoopDelay,breakLines:t.typeitBreakLines,speed:t.typeitSpeed,lifeLike:t.typeitLifeLike,cursor:t.typeitCursor,cursorSpeed:t.typeitCursorSpeed,startDelay:t.typeitStartDelay,breakDelay:t.typeitBreakDelay})}catch(t){console.error("OH NO! angular-typeit requires typeit.js on your page - do you have it loaded?")}}]}})})(),window.onload=function(){$(".developer").typed({strings:["Front-end","Back-end","Fullstack","Software","Javascript","Angular"],typeSpeed:250,loop:!0,cursorSpeed:100,lifeLike:!0,curser:!0,deleteSpeed:1e3})};var gulp=require("gulp");rename=require("gulp-rename"),uglify=require("gulp-uglify"),gulp.task("compress",function(){gulp.src("js/*.js").pipe(uglify()).pipe(rename("typed.min.js")).pipe(gulp.dest("dist"))}),gulp.task("default",["compress"]),!function(t){var e=function(e,o){this.el=t(e),this.options=t.extend({},t.fn.typed.defaults,o),this.isInput=this.el.is("input"),this.attr=this.options.attr,this.showCursor=!this.isInput&&this.options.showCursor,this.elContent=this.attr?this.el.attr(this.attr):this.el.text(),this.contentType=this.options.contentType,this.typeSpeed=this.options.typeSpeed,this.startDelay=this.options.startDelay,this.backSpeed=this.options.backSpeed,this.backDelay=this.options.backDelay,this.stringsElement=this.options.stringsElement,this.strings=this.options.strings,this.strPos=0,this.arrayPos=0,this.stopNum=0,this.loop=this.options.loop,this.loopCount=this.options.loopCount,this.curLoop=0,this.stop=!1,this.cursorChar=this.options.cursorChar,this.shuffle=this.options.shuffle,this.sequence=[],this.build()};e.prototype={constructor:e,init:function(){var t=this;t.timeout=setTimeout(function(){for(var e=0;e<t.strings.length;++e)t.sequence[e]=e;t.shuffle&&(t.sequence=t.shuffleArray(t.sequence)),t.typewrite(t.strings[t.sequence[t.arrayPos]],t.strPos)},t.startDelay)},build:function(){var e=this;if(this.showCursor===!0&&(this.cursor=t('<span class="typed-cursor">'+this.cursorChar+"</span>"),this.el.after(this.cursor)),this.stringsElement){this.strings=[],this.stringsElement.hide(),console.log(this.stringsElement.children());var o=this.stringsElement.children();t.each(o,function(o,r){e.strings.push(t(r).html())})}this.init()},typewrite:function(t,e){if(this.stop!==!0){var o=Math.round(70*Math.random())+this.typeSpeed,r=this;r.timeout=setTimeout(function(){var o=0,n=t.substr(e);if("^"===n.charAt(0)){var s=1;/^\^\d+/.test(n)&&(n=/\d+/.exec(n)[0],s+=n.length,o=parseInt(n)),t=t.substring(0,e)+t.substring(e+s)}if("html"===r.contentType){var i=t.substr(e).charAt(0);if("<"===i||"&"===i){var a="",c="";for(c="<"===i?">":";";t.substr(e+1).charAt(0)!==c&&(a+=t.substr(e).charAt(0),e++,!(e+1>t.length)););e++,a+=c}}r.timeout=setTimeout(function(){if(e===t.length){if(r.options.onStringTyped(r.arrayPos),r.arrayPos===r.strings.length-1&&(r.options.callback(),r.curLoop++,r.loop===!1||r.curLoop===r.loopCount))return;r.timeout=setTimeout(function(){r.backspace(t,e)},r.backDelay)}else{0===e&&r.options.preStringTyped(r.arrayPos);var o=t.substr(0,e+1);r.attr?r.el.attr(r.attr,o):r.isInput?r.el.val(o):"html"===r.contentType?r.el.html(o):r.el.text(o),e++,r.typewrite(t,e)}},o)},o)}},backspace:function(t,e){if(this.stop!==!0){var o=Math.round(70*Math.random())+this.backSpeed,r=this;r.timeout=setTimeout(function(){if("html"===r.contentType&&">"===t.substr(e).charAt(0)){for(var o="";"<"!==t.substr(e-1).charAt(0)&&(o-=t.substr(e).charAt(0),e--,!(0>e)););e--,o+="<"}var n=t.substr(0,e);r.attr?r.el.attr(r.attr,n):r.isInput?r.el.val(n):"html"===r.contentType?r.el.html(n):r.el.text(n),e>r.stopNum?(e--,r.backspace(t,e)):e<=r.stopNum&&(r.arrayPos++,r.arrayPos===r.strings.length?(r.arrayPos=0,r.shuffle&&(r.sequence=r.shuffleArray(r.sequence)),r.init()):r.typewrite(r.strings[r.sequence[r.arrayPos]],e))},o)}},shuffleArray:function(t){var e,o,r=t.length;if(r)for(;--r;)o=Math.floor(Math.random()*(r+1)),e=t[o],t[o]=t[r],t[r]=e;return t},reset:function(){var t=this;clearInterval(t.timeout),this.el.attr("id"),this.el.empty(),"undefined"!=typeof this.cursor&&this.cursor.remove(),this.strPos=0,this.arrayPos=0,this.curLoop=0,this.options.resetCallback()}},t.fn.typed=function(o){return this.each(function(){var r=t(this),n=r.data("typed"),s="object"==("undefined"==typeof o?"undefined":_typeof(o))&&o;n&&n.reset(),r.data("typed",n=new e(this,s)),"string"==typeof o&&n[o]()})},t.fn.typed.defaults={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],stringsElement:null,typeSpeed:0,startDelay:0,backSpeed:0,shuffle:!1,backDelay:500,loop:!1,loopCount:!1,showCursor:!0,cursorChar:"|",attr:null,contentType:"html",callback:function(){},preStringTyped:function(){},onStringTyped:function(){},resetCallback:function(){}}}(window.jQuery),!function(t){var e=function(e,o){this.el=t(e),this.options=t.extend({},t.fn.typed.defaults,o),this.isInput=this.el.is("input"),this.attr=this.options.attr,this.showCursor=!this.isInput&&this.options.showCursor,this.elContent=this.attr?this.el.attr(this.attr):this.el.text(),this.contentType=this.options.contentType,this.typeSpeed=this.options.typeSpeed,this.startDelay=this.options.startDelay,this.backSpeed=this.options.backSpeed,this.backDelay=this.options.backDelay,this.stringsElement=this.options.stringsElement,this.strings=this.options.strings,this.strPos=0,this.arrayPos=0,this.stopNum=0,this.loop=this.options.loop,this.loopCount=this.options.loopCount,this.curLoop=0,this.stop=!1,this.cursorChar=this.options.cursorChar,this.shuffle=this.options.shuffle,this.sequence=[],this.build()};e.prototype={constructor:e,init:function(){var t=this;t.timeout=setTimeout(function(){for(var e=0;e<t.strings.length;++e)t.sequence[e]=e;t.shuffle&&(t.sequence=t.shuffleArray(t.sequence)),t.typewrite(t.strings[t.sequence[t.arrayPos]],t.strPos)},t.startDelay)},build:function(){var e=this;if(this.showCursor===!0&&(this.cursor=t('<span class="typed-cursor">'+this.cursorChar+"</span>"),this.el.after(this.cursor)),this.stringsElement){this.strings=[],this.stringsElement.hide(),console.log(this.stringsElement.children());var o=this.stringsElement.children();t.each(o,function(o,r){e.strings.push(t(r).html())})}this.init()},typewrite:function(t,e){if(this.stop!==!0){var o=Math.round(70*Math.random())+this.typeSpeed,r=this;r.timeout=setTimeout(function(){var o=0,n=t.substr(e);if("^"===n.charAt(0)){var s=1;/^\^\d+/.test(n)&&(n=/\d+/.exec(n)[0],s+=n.length,o=parseInt(n)),t=t.substring(0,e)+t.substring(e+s)}if("html"===r.contentType){var i=t.substr(e).charAt(0);if("<"===i||"&"===i){var a="",c="";for(c="<"===i?">":";";t.substr(e+1).charAt(0)!==c&&(a+=t.substr(e).charAt(0),e++,!(e+1>t.length)););e++,a+=c}}r.timeout=setTimeout(function(){if(e===t.length){if(r.options.onStringTyped(r.arrayPos),r.arrayPos===r.strings.length-1&&(r.options.callback(),r.curLoop++,r.loop===!1||r.curLoop===r.loopCount))return;r.timeout=setTimeout(function(){r.backspace(t,e)},r.backDelay)}else{0===e&&r.options.preStringTyped(r.arrayPos);var o=t.substr(0,e+1);r.attr?r.el.attr(r.attr,o):r.isInput?r.el.val(o):"html"===r.contentType?r.el.html(o):r.el.text(o),e++,r.typewrite(t,e)}},o)},o)}},backspace:function(t,e){if(this.stop!==!0){var o=Math.round(70*Math.random())+this.backSpeed,r=this;r.timeout=setTimeout(function(){if("html"===r.contentType&&">"===t.substr(e).charAt(0)){for(var o="";"<"!==t.substr(e-1).charAt(0)&&(o-=t.substr(e).charAt(0),e--,!(e<0)););e--,o+="<"}var n=t.substr(0,e);r.attr?r.el.attr(r.attr,n):r.isInput?r.el.val(n):"html"===r.contentType?r.el.html(n):r.el.text(n),e>r.stopNum?(e--,r.backspace(t,e)):e<=r.stopNum&&(r.arrayPos++,r.arrayPos===r.strings.length?(r.arrayPos=0,r.shuffle&&(r.sequence=r.shuffleArray(r.sequence)),r.init()):r.typewrite(r.strings[r.sequence[r.arrayPos]],e))},o)}},shuffleArray:function(t){var e,o,r=t.length;if(r)for(;--r;)o=Math.floor(Math.random()*(r+1)),e=t[o],t[o]=t[r],t[r]=e;return t},reset:function(){var t=this;clearInterval(t.timeout);this.el.attr("id");this.el.empty(),"undefined"!=typeof this.cursor&&this.cursor.remove(),this.strPos=0,this.arrayPos=0,this.curLoop=0,this.options.resetCallback()}},t.fn.typed=function(o){return this.each(function(){var r=t(this),n=r.data("typed"),s="object"==("undefined"==typeof o?"undefined":_typeof(o))&&o;n&&n.reset(),r.data("typed",n=new e(this,s)),"string"==typeof o&&n[o]()})},t.fn.typed.defaults={strings:["These are the default values...","You know what you should do?","Use your own!","Have a great day!"],stringsElement:null,typeSpeed:0,startDelay:0,backSpeed:0,shuffle:!1,backDelay:500,loop:!1,loopCount:!1,showCursor:!0,cursorChar:"|",attr:null,contentType:"html",callback:function(){},preStringTyped:function(){},onStringTyped:function(){},resetCallback:function(){}}}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
